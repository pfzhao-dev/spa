1 - no such that and pattern select stmt
stmt stmt;
Select stmt
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
5000
2 - no such that and pattern select var
variable v;
Select v
i, k, pop, zz, pq, zk, kz, pz, pl, xx, py, yz, x, y, z, kx, zy, pr,a,b
5000
3 - no such that and pattern select assign
assign a;
Select a
3, 6, 7, 12, 19, 22, 25
5000
4 - no such that and pattern select read
read r;
Select r
5, 15, 24
5000
5 - no such that and pattern select call
call c;
Select c
4, 9, 11, 13, 14, 21
5000
6 - 1 such that follow holds 
constant c;
Select c such that Follows(3, 4)
3, 4, 1
5000
7 - 1 such that follow* holds 
print p;
Select p such that Follows*(2, 6)
16, 18, 23
5000
8 - 1 such that follow holds
call c;
Select c such that Follows(9, 10)
4, 9, 11, 13, 14, 21
5000
9 - 1 such that follows* holds
read r;
Select r such that Follows*(1, 13)
5, 15, 24
5000
10 - 1 such that follows holds
variable v;
Select v such that Follows(1, 8)
i, k, pop, zz, pq, zk, kz, pz, pl, xx, py, yz, x, y, z, kx, zy, pr, a, b
5000
11 - 1 such that folllows* holds
while w;
Select w such that Follows*(20, 22)
2, 8, 20
5000
12 - 1 such that follow does not hold 
if i;
Select i such that Follows(17, 18)
none
5000
13 - 1 such that follow* does not hold
variable v;
Select v such that Follows*(7, 10)
none
5000
14 - 1 such that follow does not hold
stmt s;
Select s such that Follows(11, 12)
none
5000
15 - 1 such that follows* does not hold
assign a;
Select a such that Follows*(10, 12)
none
5000
16 - 1 such that follows does not hold
call c;
Select c such that Follows(1, 4)
none
5000
17 - 1 such that parent holds
constant c;
Select c such that Parent(1, 7)
1,3,4
5000
18 - 1 such that parent holds
call c;
Select c such that Parent(10, 12)
4, 9, 11, 13, 14, 21
5000
19 - 1 such that parent holds
variable v;
Select v such that Parent(17, 19)
i, k, pop, zz, pq, zk, kz, pz, pl, xx, py, yz, x, y, z, kx, zy, pr,a, b
5000
20 - 1 such that parent does not hold
stmt s;
Select s such that Parent(8, 14)
none
5000
21 - 1 such that parent* holds
stmt s;
Select s such that Parent*(1, 4)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
5000
22 - 1 such that parent* holds
constant c;
Select c such that Parent*(8, 12)
1,3,4
5000
23 - 1 such that parent* holds
read r;
Select r such that Parent*(1, 6)
5, 15, 24
5000
24 - 1 such that Parent* does not hold
print p;
Select p such that Parent*(8, 8)
none
5000
25 - 1 such that Uses holds
call c;
Select c such that Uses(1, "zz")
4, 9, 11, 13, 14, 21
5000
26 - 1 such that Uses holds
print p;
Select p such that Uses(8, "pr")
16, 18, 23
5000
27 - 1 such that Uses holds
constant c;
Select c such that Uses("main", "kx")
1,3,4
5000
28 - 1 such that Uses holds
print p;
Select p such that Uses("sign", "zy")
23, 16, 18
5000
29 - 1 such that Uses holds 
read r;
Select r such that Uses("tree", "zz")
5, 15, 24
5000
30 - 1 such that Uses does not hold
stmt s;
Select s such that Uses("ride", "kx")
none
5000
31 - 1 such that Uses does not hold 
stmt s;
Select s such that Uses("prune", "y")
none
5000
32 - 1 such that Modifies holds
if i;
Select i such that Modifies("main", "y")
1, 10, 17
5000
33 - 1 such that Modifies holds
while w;
Select w such that Modifies("sign", "x")
2, 8, 20
5000
34 - 1 such that Modifies holds
call c;
Select c such that Modifies(1, "y")
4, 9, 11, 13, 14, 21
5000
35 - 1 such that Modifies holds 
assign a;
Select a such that Modifies(8, "x")
3, 6, 7, 12, 19, 22, 25
5000
36 - 1 such that Modifies does not hold
variable v;
Select v such that Modifies("priune", "x")
none
5000
37 - 1 such that Modifies does not hold 
constant c;
Select c such that Modifies("sign", "y")
none
5000
38 - 1 such that Calls holds
constant c;
Select c such that Calls("main", "sign")
1,3,4
5000
39 - 1 such that Calls holds
print p;
Select p such that Calls("sign", "prune")
16, 18, 23
5000
40 - 1 such that Calls* holds
read r;
Select r such that Calls*("main", "prune")
5, 15, 24
5000
41 - 1 such that Calls* holds
constant c;
Select c such that Calls*("ride", "tree")
1, 3, 4
5000
42 - 1 such that Calls does not hold
variable v;
Select v such that Calls("tree", "ride")
none
5000
43 - 1 such that Calls does not hold
print p;
Select p such that Calls("sign", "ride")
none
5000
44 - 1 such that Calls* does not hold 
read r;
Select r such that Calls*("tree", "main")
none
5000
45 - 1 such that Calls* does not hold
stmt s;
Select s such that Calls*("ride", "sign")
none
5000
46 - 1 such that common synonym (Follows)
assign a;
Select a such that Follows(a, 4)
3
5000
47 - 1 such that common synonym (Follows)
read r;
Select r such that Follows(2, r)
5
5000
48 - 1 such that common synonym (Follows*)
stmt s;
Select s such that Follows*(s, 18)
none
5000
49 - 1 such that common synonym (Follows*)
call c;
Select c such that Follows*(1, c)
13
5000
50 - 1 such that common synonym (Parent)
stmt s;
Select s such that Parent(s, 4)
2
5000
51 - 1 such that common synonym (Parent)
if i;
Select i such that Parent(i, 18)
17
5000
52 - 1 such that common synonym (Parent*)
assign a;
Select a such that Parent(2, a)
3
5000
53 - 1 such that common synonym (Parent*)
stmt s;
Select s such that Parent*(s, 4)
1, 2
5000
54 - 1 such that common synonym (Uses)
assign a;
Select a such that Uses(a, "x")
12, 22
5000
55 - 1 such that common synonym (Uses)
variable v;
Select v such that Uses(1, v)
i, k, pop, zz, pq, zk, kz, pz, pl, py, yz, x, y, a, b
5000
56 - 1 such that common synonym (Uses)
stmt s;
Select s such that Uses(s, "x")
1, 2, 4, 8, 10, 11, 12, 17, 20, 21, 22
5000
57 - 1 such that common synonym (Modifies)
procedure p;
Select p such that Modifies(p, "y")
tree, main, ride 
5000
58 - 1 such that common synonym (Modifies)
if i;
Select i such that Modifies(i, "x")
10
5000
59 - 1 such that common synonym (Modifies)
variable v;
Select v such that Modifies(2, v)
zz, y
5000
60 - 1 such that common synonym (Calls)
procedure p;
Select p such that Calls(p, "sign")
main
5000
61 - 1 such that common synonym (Calls)
procedure p;
Select p such that Calls("tree", p)
none
5000
62 - 1 such that common synonym (Calls*)
procedure p;
Select p such that Calls*("main", p)
tree, prune, sign, ride
5000
63 - 1 such that common synonym (Calls*)
procedure p;
Select p such that Calls*(p, "main")
none
5000
64 - 1 such that and 1 pattern clause (Follows)
if i; while w;
Select i such that Follows(i, 8) pattern w("x", _)
1
5000
65 - 1 such that and 1 pattern clause(follows*)
if i; assign a;
Select a such that Follows*(9, i) pattern a (_, _"pq*zk"_) 
3
5000
66 - 1 such that and 1 pattern clause (parent)
variable v; if i;
Select v such that Parent(i, 7) pattern i(v, _, _) 
i
5000
67 - 1 such that and 1 pattern clause (parent*)
assign a; read r;
Select a such that Parent*(1, r) pattern a("x", _"y"_)
22, 12
5000
68 - 1 such that and 1 pattern clause (uses)
procedure p; assign a;
Select p such that Uses(p, "y") pattern a("x", _"x+y"_)
sign, main, tree, ride
5000
69 - 1 such that and 1 pattern clause (uses)
while w; variable v; assign a;
Select w such that Uses(w, "x") pattern a(v, _"zz"_)
2, 20, 8
5000
70 - 1 such that and 1 pattern clause (modifies)
if i; variable v; read r;
Select r such that Modifies(r, "x") pattern i ("z", _, _)
15, 24
5000
71 - 1 such that and 1 pattern clause (modifies)
call c; variable v; while w;
Select c such that Uses(c, "pop") pattern w(v, _)
none
5000
72 - 1 such that and 1 pattern clause (calls)
procedure p; variable v; if i;
Select p such that Calls(p, "ride") pattern i(v, _, _)
main
5000
73 - 1 such that and 1 pattern clause (calls*)
assign a; procedure p;
Select a such that Calls*("sign", p) pattern a("x", "x + y + z*z-1") 
22
5000
74 - Common synonym pattern and such that clause (follows)
variable v; if i;
Select i such that Follows(i, 8) pattern i(v, _, _)
1
5000
75 - Common synonym pattern and such that clause (follow*)
while w; if i; variable v;
Select w such that Follows*(i, w) pattern w(v, _)
8
5000
76 - Common synonym pattern and such that clause (parent)
if i; assign a;
Select i such that Parent(i, a) pattern i("y", _, _)
10, 17
5000
77 - Common synonym pattern and such that clause (parent*)
while w; if i; variable v;
Select w such that Parent*(w, i) pattern w(v, _)
8
5000
78 - Common synonym pattern and such that clause (uses)
assign a1; assign a2; variable v; 
Select a1 such that Uses(a1, v) pattern a1(v, _)
7, 12, 22
5000
79 - Common synonym pattern and such that clause (Uses)
variable v; call c; if i;
Select c such that Uses(c, v) pattern i(v, _, _)
11, 13, 4, 21
5000
80 - Common synonym pattern and such that clause (modifies)
variable v; procedure p; assign a;
Select p such that Modifies(p, v) pattern a(v, _)
main, sign, ride, prune, tree
5000
81 - Common synonym pattern and such that clause (modifies)
if i; variable v;
Select i such that Modifies(i, v) pattern i (v, _, _) 
10, 17
5000
82 - Common synonym pattern and such that clause (Calls)
procedure p1; procedure p2; assign a;
Select p such that Calls(p1, p2) pattern a ("x", _"x + z"_) 
none
5000
83 - Multiple common synonyms/such that and pattern clauses 
procedure p; print p2; call c; assign a; if i; variable v;
Select p such that Calls(p, "ride") and Parent*(i, a) pattern a(v, _"pz/pl"_) such that Uses(p, v)
main
5000
84 - Multiple common synonyms/such that and pattern clauses
read r; procedure p; variable v; assign a; while w;
Select v such that Modifies(w, v) pattern w(v, _) such that Uses(a, v) pattern a(v, _) such that Uses(p, v)
x
5000
85 - Multiple common synonyms/such that and pattern clauses
read r; procedure p; variable v; assign a; while w; if i;
Select a such that Parent*(w, a) pattern a(v, _"y"_) such that Follows(i, w) pattern w(v, _) such that Uses(w, v)
12
5000
86 - Multiple common synonyms/such that and pattern clauses
constant c1; call c; variable v; while w; assign a1; assign a2;
Select v such that Modifies(c, v) pattern a2(v, _"z * z - 1"_) such that Uses(w, v) pattern a1(v, _"kx + zy"_) such that Calls("sign", "prune")
none
5000
87 - Multiple common synonyms/such that and pattern clause
call c; procedure p1; procedure p2; while w; assign a; variable v;
Select c such that Calls(p1, p2) pattern w(v, _) such that Uses(p1, v) pattern a(v, "zz") such that Modifies(p2, v) and Parent*(w, c)
9, 11, 21
5000
88 - With clause (holds)
call c; 
Select c with 1 = 1
4, 9, 11, 13, 14, 21
5000
89 - With clause (holds)
print p;
Select p with 22344535 = 22344535
16, 18, 23
5000
90 - With clause (holds)
variable v;
Select v with "heheheh" = "heheheh"
i, k, pop, zz, pq, zk, kz, pz, pl, xx, py, yz, x, y, z, kx, zy, pr,a,b
5000
91 - With clause (does not hold)
if i;
Select i with "heheheh" = "hehe"
none
5000
92 - With clause (does not hold)
while w;
Select w with 1000 = 100
none
5000
93 - With clause (does not hold)
constant c;
Select c with 101010 = "101010"
none
5000
94 - 1 with 1 unknown (holds)
read r;
Select r.varName with r.stmt# = 15
x
5000
95 - 1 with 1 unknown (holds)
constant c;
Select c.value with c.value = 4
4
5000
96 - 1 with 1 unknown (holds)
variable v;
Select v with v.varName = "x"
x
5000
97 - 1 with 1 unknown ( does not hold)
variable v;
Select v with v = "yy"
none
5000
98 - 1 with 1 unknown (does not hold)
constant c;
Select c with c.value = "4"
none
5000
99 - 1 with 1 unknown (does not hold)
procedure p;
Select p with p.procName = "main"
main
5000
100 - 1 with 1 unknown (does not hold)
print p;
Select p with p.stmt# = 24
none
5000
101 - 1 with 2 unknown (holds)
procedure p; call c;
Select p with c.procName = p.procName
sign, tree, ride, prune
5000
102 - 1 with 2 unknown (holds)
print p; stmt s;
Select p with p.stmt# = s.stmt#
16, 18, 23
5000
103 - 1 with 2 unknown (holds)
call c1; constant c;
Select c1.procName with c1.stmt# = c.value
tree
5000
104 - 1 with 2 unknown (holds)
procedure p; stmt s; 
Select s with p.procName = "sign"
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
5000
105 - 1 with 2 unknown (holds)
call c; stmt s;
Select c with c.stmt# = s.stmt#
4, 9, 11, 13, 14, 21
5000
106 - 1 with 2 unknown (does not hold)
stmt s1, s2;
Select s with s2 = s1
none
5000
107 - 1 with 2 unknown (does not hold)
print p; read r;
Select r with r.varName = p.varName
none
5000
108 - 1 with 2 unknown (does not hold)
call c; print p;
Select p with p.stmt# = c.stmt#
none
5000
109 - 1 with 2 unknown (does not hold)
if i; assign a;
Select i with a = i
none
5000
110 - 1 with 2 unknown (holds)
prog_line p1, p2;
Select BOOLEAN with p1 = p2
TRUE
5000
111 - 1 with 2 unknown (holds)
print p; variable v; 
Select p.varName with p.varName = v.varName
y, zz, pr
5000
113 - 1 with 2 unknown (holds)
constant c; stmt s;
Select s.stmt# with s.stmt# = c.value
1, 3, 4
5000
114 - 1 with 2 unknown (does not holds)
procedure p; print p2;
Select BOOLEAN with p.procName = p2.varName
FALSE
5000
115 - 1 with 2 unknown (does not hold)
variable v; procedure p;
Select BOOLEAN with p.procName = v.varName
FALSE
5000
116 - 1 with 2 unknown (does not hold)
print p; read r;
Select BOOLEAN with r.varName = p.stmt#
none
5000
117 - 1 with 2 unknown (does not hold)
procedure p; variable v;
Select v with v.varName = p.varName
none
5000
118 - 1 such that 1 pattern 1 with 
procedure p; variable v; call c; assign a;
Select p such that Uses(p, v) pattern a (v, _"z * z - 1"_) with c.procName = p.procName
none
5000
119 - 1 such that 1 pattern 1 with
assign a, a2; variable v;
Select <a, a2.stmt#> such that Uses(a2, v) pattern a (v, "y") with v.varName = "y"
none
5000
120 - 1 such that 1 pattern 1 with
if i; while w; variable v; call c;
Select <c, v.varName> such that Follows(i, w) pattern i(v, _, _) with c.stmt# = w.stmt#
none
5000
121 - 1 such that 1 pattern 1 with
while w; procedure p; call c; variable v;
Select <c.procName, p> such that Calls*(p, "prune") pattern w(v, _) with c.procName = p.procName
sign sign
5000
122 - 1 such that 1 pattern 1 with
constant c; stmt s; assign a1, a2; while w; variable v;
Select <w.stmt#, s.stmt#, c> such that Uses(w, v) pattern a1(v, _"zk"_) with a1.stmt# = s.stmt#
2 3 1, 2 3 3, 2 3 4, 20 3 1, 20 3 3, 20 3 4, 8 3 1, 8 3 3, 8 3 4
5000
123 - 1 such that 1 pattern 1 with
call c; stmt s; assign a;
Select <a, c.procName, s> such that Next*(a, s) pattern a ("x", _) with c.stmt# = s.stmt#
12 prune 9, 12 ride 11, 12 sign 13
5000
124 - 1 such that 1 pattern 1 with 
while w; call c; procedure p; read r; variable v;
Select <v.varName, p.procName, r.varName> such that Next*(c, r) pattern w(v, _) with r.varName = v.varName
x main x, x sign x, x tree x, x ride x, x prune x
5000
125 - 1 such that 1 pattern 1 with 
procedure p1, p2; call c1, c2; assign a; variable v;
Select <v, p1.procName, c2.procName> such that Calls(p1, p2) pattern a (v, _"py "_) with c2.procName = p2.procName
xx main sign, xx main prune, xx main tree, xx main ride, xx sign prune, xx ride tree
5000
126 - 1 such that 1 pattern 1 with
while w; if i; variable v; assign a; constant c;
Select a such that Modifies(w, v) pattern a(v, _) with a.stmt# = c.value
3
5000
127 - No such that select procname
procedure p;
Select p.procName
main, ride, sign, tree, prune
5000
128 - No such that select stmt#
stmt s;
Select s.stmt#
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
5000
129 - No such that select assign stmt#
assign a;
Select a.stmt#
3, 6, 7, 12, 19, 22, 25
5000
130 - No such that select read varname
read r;
Select r.varName
xx, x
5000
131 - No such that select varname
variable v;
Select v.varName
i, k, pop, zz, pq, zk, kz, pz, pl, xx, py, yz, x, y, z, kx, zy, pr,a,b
5000
132 - No such that select constant value
constant c;
Select c.value
1,3,4
5000
133 - No such that select procName
call c;
Select c.procName
ride, tree, prune, sign
5000
134 - select tuple without such that
call c; print p;
Select <c, p.varName>
4 y, 4 zz, 4 pr, 9 y, 9 zz, 9 pr, 11 y, 11 zz, 11 pr, 13 y, 13 zz, 13 pr, 14 y, 14 zz, 14 pr, 21 y, 21 zz, 21 pr
5000
135 - select tuple without such that
print p; procedure proc; while w; if i;
Select <p.varName, proc.procName, w, i.stmt#>
y main 2 1, y main 2 10, y main 2 17, y main 8 1, y main 8 10, y main 8 17, y main 20 1, y main 20 10, y main 20 17, y sign 2 1, y sign 2 10, y sign 2 17, y sign 8 1, y sign 8 10, y sign 8 17, y sign 20 1, y sign 20 10, y sign 20 17, y prune 2 1, y prune 2 10, y prune 2 17, y prune 8 1, y prune 8 10, y prune 8 17, y prune 20 1, y prune 20 10, y prune 20 17, y tree 2 1, y tree 2 10, y tree 2 17, y tree 8 1, y tree 8 10, y tree 8 17, y tree 20 1, y tree 20 10, y tree 20 17, y ride 2 1, y ride 2 10, y ride 2 17, y ride 8 1, y ride 8 10, y ride 8 17, y ride 20 1, y ride 20 10, y ride 20 17, pr main 2 1, pr main 2 10, pr main 2 17, pr main 8 1, pr main 8 10, pr main 8 17, pr main 20 1, pr main 20 10, pr main 20 17, pr sign 2 1, pr sign 2 10, pr sign 2 17, pr sign 8 1, pr sign 8 10, pr sign 8 17, pr sign 20 1, pr sign 20 10, pr sign 20 17, pr prune 2 1, pr prune 2 10, pr prune 2 17, pr prune 8 1, pr prune 8 10, pr prune 8 17, pr prune 20 1, pr prune 20 10, pr prune 20 17, pr tree 2 1, pr tree 2 10, pr tree 2 17, pr tree 8 1, pr tree 8 10, pr tree 8 17, pr tree 20 1, pr tree 20 10, pr tree 20 17, pr ride 2 1, pr ride 2 10, pr ride 2 17, pr ride 8 1, pr ride 8 10, pr ride 8 17, pr ride 20 1, pr ride 20 10, pr ride 20 17, zz main 2 1, zz main 2 10, zz main 2 17, zz main 8 1, zz main 8 10, zz main 8 17, zz main 20 1, zz main 20 10, zz main 20 17, zz sign 2 1, zz sign 2 10, zz sign 2 17, zz sign 8 1, zz sign 8 10, zz sign 8 17, zz sign 20 1, zz sign 20 10, zz sign 20 17, zz prune 2 1, zz prune 2 10, zz prune 2 17, zz prune 8 1, zz prune 8 10, zz prune 8 17, zz prune 20 1, zz prune 20 10, zz prune 20 17, zz tree 2 1, zz tree 2 10, zz tree 2 17, zz tree 8 1, zz tree 8 10, zz tree 8 17, zz tree 20 1, zz tree 20 10, zz tree 20 17, zz ride 2 1, zz ride 2 10, zz ride 2 17, zz ride 8 1, zz ride 8 10, zz ride 8 17, zz ride 20 1, zz ride 20 10, zz ride 20 17
5000
136 - select tuple without such that
read r; print p;
Select <p.varName, r.varName>
zz xx, zz x, y xx, y x, pr xx, pr x
5000
137 - next relationship holds no common
procedure p;
Select p such that Next(1, 2)
main, prune, tree, sign, ride
5000
138 - next relationship holds
stmt s;
Select s such that Next(4, 2)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
5000
139 - next relationship does not holds
variable v;
Select v such that Next(11, 12)
none
5000
140 - next* relationship holds
constant c;
Select c such that Next*(1, 13)
1,3,4
5000
141 - next* relationship does not hold
call c;
Select c such that Next*(2, 19)
none
5000
142 - next* relationship does not hold
print p;
Select p such that Next*(10, 19)
none
5000
143 - next does not hold
read r;
Select r such that Next(6, 7)
none
5000
144 - next does not hold
print p;
Select p such that Next(9, 13)
none
5000
145 - next does not hold 
call c;
Select c such that Next(14, 16)
none
5000
146 - next* does not hold
procedure p;
Select p such that Next*(14, 9)
none
5000
147 - next* does not hold
read r;
Select r such that Next*(2, 7)
none
5000
148 - next* does not hold
print p;
Select p such that Next*(13, 17)
none
5000
149 - common synonym next* holds
read r;
Select r such that Next*(r, 16)
15
5000
150 - common synonym next holds
assign a;
Select a such that Next(a, 15)
none
5000
151 - common synonym next holds
if i;
Select i such that Next(25, i)
none
5000
152 - common synonym next* holds
while w;
Select w such that Next*(w, 12)
8, 2
5000
153 - common synonym next does not hold
print p;
Select p such that Next(p, 19)
none
5000
154 - common synonym next* does not hold
read r;
Select r such that Next*(18, r)
none
5000
155 - common synonym next* does not hold
stmt s;
Select s such that Next*(20, 25)
none
5000
156 - 2 unknown next 
read r; assign a;
Select r such that Next(r, a)
5, 24
5000
157 - 2 unknown next*
print p; read r;
Select p such that Next*(r, p)
16 
5000
158 - 2 unknown next*
stmt s; if i;
Select s such that Next*(i, s)
2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19
5000
159 - 2 unknown next 
while w; assign a;
Select w such that Next(a, w)
8
5000
160 - 1 next* 1 pattern
assign a; while w; if i;
Select i such that Next*(a, i) pattern a("zz", _)
10
5000
161 - 1 next* 1 with
call c; procedure p; if i;
Select c such that Next(i, c) with c.procName = p.procName
11
5000
162 - 1 next 1 pattern Boolean select
call c; read r; if i;
Select BOOLEAN such that Next(c, r) pattern i("k", _, _)
FALSE
5000
163 - 1 affects does not hold no common synonym
call c; read r; if i;
Select i such that Affects(3, 6)
none
5000
164 - 1 affects does not hold 
while w; read r;
Select BOOLEAN such that Affects(5, 6)
FALSE
5000
165 - 1 affects* does not hold
stmt s;
Select s such that Affects*(25, 12)
none
5000
166 - 1 affects* does not hold
call c;
Select c such that Affects*(9, 18)
none
5000
167 - 1 affects 1 common synonym does not hold
stmt s;
Select s such that Affects(s, 12)
none
5000
168 - 1 affects 1 common synonym
read r;
Select r such that Affects(r, 5)
none
5000
169 - 1 affects* does not hold 
print p; variable v;
Select p such that Affects*(p, v)
none
5000
170 - 1 affects* does not hold
call c; assign a;
Select c such that Affects*(a, c)
none
5000
171 - 1 affects 1 pattern 
assign a1, a2; variable v;
Select <a1, a2> such that Affects(a1, a2) pattern a2(_, _)
none
5000
172 - 1 affects 1 pattern 
assign a1, a2; if i; variable v;
Select <a1, a2> such that Affects(a1, a2) pattern i(v, _, _)
none
5000
173 - 1 affects* 1 pattern 
stmt a1, a2; if i; variable v;
Select <i, v> such that Affects(a1, a2) pattern a1("x", _)
none
5000
174 - 1 affects* 1 pattern 1 with
stmt a1, a2; variable v; constant c;
Select <a, c.value> such that Affects(c, v) pattern a1(_, _"zz"_) with a1.stmt# = c.value
none
5000
175 - 1 affects* 1 pattern 1 with clause
assign a; variable v; if i;
Select a such that Modifies(i, v) and Affects(3, a) with a.stmt# = 12 pattern i (v, _, _)
none
5000
176 - 1 affects* 1 pattern 1 with statement
read r; print p; call c; assign a;
Select <r, c> such that Affects(a, p) pattern a("x", _"x%y"_) with a.stmt# = 3
none
5000
177 - stress test (5 clauses)
print p; read r; call c; assign a; variable v;
Select <r, p> such that pattern a ("zz", _"pz/pl"_) and such that Affects(3, 6) with 1 = 1 and "x" = "x" and v.varName = p.varName and r.varName = p.varName
none
5000
178 - stress test (7 clauses)
call c; procedure p1, p2; assign a; variable v; if i; constant c1;
Select v.varName such that Calls(p1, p2) pattern a(v, _"z*z - 1"_)  and such that Affects(7, a) and Modifies("main", v) and Uses("ride", v) and Parent(i, a) with p1.procName = v.varName and c.stmt# = c1.value
none
5000
179 - stress test (8 clauses)
assign a1, a2; call c, c2; print p; read r, r2; while w; variable v; constant const; procedure proc; if i;
Select <proc, c.procName> such that Follows*(w, a1) and Modifies(proc, v) and Uses(c, v) pattern i (v, _, _) and a1 (v, _) with r.varName = r2.varName and c.procName = proc.procName
ride ride
5000
